SIGNAL void simulateCarMotor(void) {
  float currentPos;
  currentPos = 0.0;

  while (1) {
    if (TIM3_ARR > 0) {
      currentPos += ((float)TIM3_CCR1 / (float)TIM3_ARR) * 0.125;
      currentPos -= ((float)TIM3_CCR2 / (float)TIM3_ARR) * 0.125;
    }

    printf("%f\n", currentPos);
    
    // set the pulse sensor
    if (currentPos - (float)(int)currentPos < 0.25 ||
        currentPos - (float)(int)currentPos >= 0.75)
      PORTC |= 1 << 9;
    else
      PORTC &= ~(1 << 9);

    // set the floor sensor
    if (currentPos <= 0.5 ||
        currentPos >= 399.5 && currentPos <= 400.5 ||
        currentPos >= 799.5)
      PORTC |= 1 << 7;
    else
      PORTC &= ~(1 << 7);

    swatch(0.0025);
  }
}

SIGNAL void testCase0() {
  int pos;
  int i;
  int lastPulsePinValue;
  int ok;

  ok = 1;
  pos = 0;

  // close the doors
  PORTC |= 1 << 8;

  // let's go to floor 2
  printf("going to floor 2\n");
  PORTC |= 1 << 1;

  // count the pulses to know what our position is
  lastPulsePinValue = PORTC & (1 << 9);
  for (i = 0; i < 6000; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      ++pos;
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  // now it's 15s later, we should be at floor 2 and
  // the motor should be stopped
  PORTC ^= 1 << 1;
  ok = ok & (pos >= 399 && pos <= 401 &&
             (PORTC & (1 << 7)) &&
             !TIM3_CCR1 && !TIM3_CCR2);

  if (!ok) {
    while (1) {
      printf("Test-case failed: did not get to floor 2!\n");
      swatch(0.02);
    }
  }

  while (1) {
    if (ok)
      printf("Test-case succeeded\n");
    swatch(0.02);
  }

}

SIGNAL void testCase1() {
  int pos;
  int i, j;
  int lastPulsePinValue;
  int reached1, reached2, reached3;
  int at_floor;

  reached1 = 0;
  reached2 = 0;
  reached3 = 0;
  pos = 0;

  // close the doors
  PORTC |= 1 << 8;

  // let's go to floor 2
  printf("going to floor 2\n");
  PORTC |= 1 << 1;

  // count the pulses to know what our position is
  lastPulsePinValue = PORTC & (1 << 9);
  for (i = 0; i < 1200; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  // now it's 2s later, do the calls to floor 1 and 3
  printf("calling to floor 1 and 3\n");
  PORTC ^= 1 << 1;
  PORTC |= 1 << 0;
  PORTC |= 1 << 2;

  for (i = 0; i < 400; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  // reset the pins
  PORTC ^= 1 << 0;
  PORTC ^= 1 << 2;

  // we give the elevator 45s time to go to floors 1 and 3
  for (j = 0; j < 50 && (!reached1 || !reached3); ++j) {
  printf("%d\n", pos);
    at_floor = 0;
    // every second, check whether we are at a floor
    if ((PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2) {
      if (pos >= -1 && pos <= 1 && !reached1) {
        // reached floor 1
        printf("arrived at floor 1\n");
        reached1 = 1;
        at_floor = 1;
      }
      if (pos >= 399 && pos <= 401 && !reached2) {
        // reached floor 2
        printf("arrived at floor 2\n");
        reached2 = 1;
        at_floor = 1;
      }
      if (pos >= 799 && pos <= 801 && !reached3) {
        // reached floor 3
        printf("arrived at floor 3\n");
        reached3 = 1;
        at_floor = 1;
      }
    }

    // if we have stopped at a floor, we open the doors for 1s
    if (at_floor)
      PORTC ^= 1 << 8;

    // wait 1s
    for (i = 0; i < 400; ++i) {
      if (lastPulsePinValue < (PORTC & (1 << 9)))
        pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(0.0025);
    }

    if (at_floor)
      PORTC ^= 1 << 8;
  }

  if (!reached1) {
    while (1) {
      printf("Test-case failed: did not get to floor 1!\n");
      swatch(0.02);
    }
  }

  if (!reached3) {
    while (1) {
      printf("Test-case failed: did not get to floor 3!\n");
      swatch(0.02);
    }
  }

  while (1) {
    printf("Test-case succeeded\n");
    swatch(0.02);
  }

}

SIGNAL void testCase2() {
  int pos;
  int i;
  int lastPulsePinValue;

  pos = 0;

  // close the doors
  PORTC |= 1 << 8;

  // let's go to floor 3
  printf("going to floor 3\n");
  PORTC |= 1 << 2;

  // count the pulses to know what our position is
  lastPulsePinValue = PORTC & (1 << 9);

  while (pos <= 398) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  // now we are just before floor 2, add a call to floor 2
  printf("calling to floor 2\n");
  PORTC ^= 1 << 2;
  PORTC |= 1 << 1;

  // wait until we are at floor 3, for at most 15s
  for (i = 0;
       i < 6000 &
       !(pos >= 799 && pos <= 801
         (PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2);
       ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  printf("Position is: %d\n", pos);

  // wait 0.5s
  for (i = 0; i < 200; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  if (!(pos >= 799 && pos <= 801
        (PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2)) {
    while (1) {
      printf("Test-case failed: did not get to floor 3, or elevator did not wait there!\n");
      swatch(0.02);
    }
  }

  printf("arrived at floor 3\n");

  // open the doors for 1s
  PORTC ^= 1 << 8;

  // wait 1s
  for (i = 0; i < 400; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  PORTC ^= 1 << 8;

  // wait until we are at floor 2, for at most 15s
  for (i = 0;
       i < 6000 &
       !(pos >= 399 && pos <= 401
         (PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2);
       ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  // wait 0.5s
  for (i = 0; i < 200; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }

  if (!(pos >= 399 && pos <= 401
        (PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2)) {
    while (1) {
      printf("Test-case failed: did not get to floor 2, or elevator did not wait there!\n");
      swatch(0.02);
    }
  }

  printf("arrived at floor 2\n");

  while (1) {
    printf("Test-case succeeded\n");
    swatch(0.02);
  }

}








SIGNAL void testCase3() {
  int i;
  int pos;
  int lastPulsePinValue;
  int at_floor;

  pos = 0;
 

  // close the doors
  PORTC |= 1 << 8;

  // count the pulses to know what our position is
  lastPulsePinValue = PORTC & (1 << 9);
for(;;){
     if (lastPulsePinValue < (PORTC & (1 << 9)))
        pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(0.0025);
      //printf("pos:%d\n", pos);

	if(rand(0)%200 ==0){	  
		  if(rand(0)%2){
		  	//generated raising event
		  	PORTC |= 1 << rand(0)%4;
			
		  }
		  else
		  {
			//generated falling event
		  	PORTC &= ~(1 << rand(0)%4);			
		  }
	}
	   //printf(" atfloor:%d",at_floor);

	if(!(PORTC & (1 << 7)) && (TIM3_CCR1 || TIM3_CCR2))
    {
		//printf("\nleft the floor.");
		at_floor = 0;
	}

    // every second, check whether we are at a floor
      if ((PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2) {	 
		
			if(rand(0)%1000 == 0){
		  		PORTC &= ~(1 << 8); 
				 // wait 1s
			    for (i = 0; i < 400; ++i) {
			      if (lastPulsePinValue < (PORTC & (1 << 9)))
			        pos += TIM3_CCR1 ? 1 : (TIM3_CCR2 ? -1 : 0);
			      lastPulsePinValue = PORTC & (1 << 9);
			      swatch(0.0025);
			    }
			}
			else
				PORTC |= 1 << 8;
							
      if (pos >= -1 && pos <= 1) {
        // reached floor 1
        printf("arrived at floor 1.\n");        
        at_floor = 1;				 
      }
      if (pos >= 399 && pos <= 401 ) {
        // reached floor 2
        printf("arrived at floor 2.\n");        
        at_floor = 1;				
      }
      if (pos >= 799 && pos <= 801) {
        // reached floor 3
        printf("arrived at floor 3.\n");        
        at_floor = 1;			
      }
    }
      
  }
}




FUNC void run0(void) {
  simulateCarMotor();
  testCase0();
}

FUNC void run1(void) {
  simulateCarMotor();
  testCase1();
}

FUNC void run2(void) {
  simulateCarMotor();
  testCase2();
}
FUNC void run3(void) {
  simulateCarMotor();
  testCase3();
}
